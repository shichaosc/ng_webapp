from webapp.models import *
from django.core.management.base import BaseCommand
from student.models import UserParentInfo
from finance.models import BalanceChangeNew


class Command(BaseCommand):

    def handle(self, *args, **options):

        need_to_deal_ids = [1024662139519228,1039644946446687,1041855119325961,1061101876337618,1123815778783410,1174860076276370,1191930721147173,1192633351855660,1197919569941231,1263984127817846,1265648442139834,1337444058360815,1346199998750869,1358505434395587,1359592085981913,1386852766435479,1436848793739947,1438868248233557,1464361799212204,1482586737819613,1484070684243471,1507924898762224,1543823755511554,1551048113330897,1596248741621610,1608188308208326,1648143199190194,1658718250131107,1664354019550039,1689832456350418,1690706534446433,1702356460437524,1703250929576790,1742213548260976,1777144505094397,1779175550184268,1786328428378824,1789864056276287,1809699904732343,1859632366844475,1860503141329551,1869363489411335,1914159899641636,1995736699774987,2030464893967497,2113125373098080,2152624105607340,2160123464675293,2160927439274001,2174094786347030,2222313765999318,2253808282456092,2260880737795768,2274748121852883,2274793124818469,2303840757837002,2307202029129159,2319481290242681,2389020585029690,2401487728450101,2429620699524961,2479011697453800,2505285500948865,2511995923711857,2563854752626967,2580737432395437,2585308913694594,2644750222381058,2648786696271984,2671323894631701,2675485364173038,2688220497746586,2688354133809444,2692978029664066,2709097777066112,2735749276057543,2737728345236471,2746100260765370,2786577531244706,2807915035968125,2816167167169941,2837211349735093,2879563548563122,2892703621622039,2898872023342297,2900479359749704,2901214650322396,3171667652840969,3243338649471282,3274466426011394,3284828439369691,3309245288071853,3361666366339517,3388242415980819,3402169836115894,3409994515719175,3422341629297173,3460121808535593,3479174546349060,3485607973974266,3498609396218244,3510546741202327,3514588721368706,3568643842413206,3586735585504848,3645574388779767,3649888697268295,3664159127869606,3673253494293436,3703595334916069,3704037095286722,3705312383175974,3719218497044738,3725203184491518,3739361378356619,3751644924899708,3784718175709022,3787321416788628,3818745946193925,3819733270750195,3821024797443114,3830647167509819,3905376306156279,3906294686639637,3918846734485985,3926243254614726,3971271923323555,3991655869711435,4024699642958700,4099342632671717,4192618416730858,4224278035232688,4245328838223260,4273186466755515,4278247501287453,4309974527466610,4344443446348537,4362138240868547,4392582433506507,4397947871538482,4434172932143948,4444516527065786,4448566046661342,4454058423191478,4551085158541987,4553474698155410,4571465013030841,4597622008800552,4642706224941920,4707457877537715,4711641576395600,4732187152154784,4753161270404902,4767564906276128,4769094087175883,4799756874092324,4809834441593765,4897092987629637,5024449085409021,5072468465908859,5076761438440689,5116886983233804,5129165254897067,5138983508962507,5154940052743034,5166644827030772,5203262368249384,5231692020928787,5262393990966032,5273917600885062,5351897755386522,5352302350498365,5355744531966785,5365002722742700,5372759100208088,5402860163194448,5448420977673418,5459514796034565,5468776763030997,5479832878262329,5505766821190587,5532328048323871,5550446905294805,5572139224507230,5584450834041068,5587397685659504,5643157999406611,5651983626255213,5655746986146876,5701428258596602,5734396183453838,5786462796018273,5788703568952033,5907646044613755,5910741528624765,6001321849143014,6010247644903431,6060551800148971,6145548551307636,6148257488958923,6155423287466965,6169464014542206,6180176533223208,6234540524578780,6379240252221296,6449445314611594,6463466441836872,6464870812665751,6482125673439476,6523934812182510,6594994102829146,6601489738057194,6631519965853920,6632789718407308,6647404503931703,6667600463426592,6681404364896105,6710815874271778,6740667326070311,6750292391736462,6777280473391548,6830032914854009,6852062229989920,6865624635728161,6922291785531761,6925759427335608,6941189069966531,6949735748509349,6957722364584296,6998105429696782,6998318979082605,7019180094707091,7020244988564232,7065729176854006,7165940595241102,7167121364534676,7168663107576765,7173850818224935,7204411567561615,7251714475510133,7320854184862306,7375324539037198,7393751361985829,7415052448342754,7436441532592055,7440839229263066,7444251886547242,7466091236657147,7491603309415652,7512778533456434,7561150901842057,7571264728096770,7599973802945044,7609440855630949,7612949835558514,7652704187088733,7652901937275477,7744732389031190,7746321371641959,7789360288584094,7800429015607284,7818440183780026,7840767354763656,7884510607947645,7924800936993969,7953394963837776,7992270955130245,8064908544360754,8094062824845636,8106437054328382,8166520089994592,8172856019653823,8192454297000623,8216913677586290,8248277000670227,8307890919430312,8333343257374210,8392650019253868,8406207543257287,8440650934092434,8465670459529671,8538743330620568,8547148277688517,8563606812955593,8575432773307924,8596919926220296,8608185009925336,8625539216224752,8685279279051058,8685805796861413,8690261823833633,8698303603092772,8701564029700097,8776095807130491,8821924801099943,8853839298003828,8857987250677397,8883749949955757,8898338795382357,8906747485294597,8919070435027380,8927700774579009,8972820806789330]
        need_to_deal_ids2 = [1142034865458155,1741982869103773,2892014440504822,3591960798351536,4264345436374625,4410631621292430,6010899729941785,6355938581870841,6481127336204299,7343443495172220,7493958811356414,7759002916368337,7940443902507042,8182138602356363,8406536574247665,8890443858257454,8983945180252664]

        parents = UserParentInfo.objects.filter(id__in=need_to_deal_ids).all()

        smallclass_parents = UserParentInfo.objects.filter(id__in=need_to_deal_ids2).all()

        for parent in parents:

            create_time = parent.create_time + timedelta(days=1)

            sql = '''\ninsert into finance_balance_change(role, user_id, reason, amount, parent_user_id, reference, xg_user_id, adviser_user_id, create_time, update_time) 
                    values({},{},{},{},{},{},{},{},'{}','{}');\n'''.format(BalanceChangeNew.PARENT,
                                                                        parent.id,
                                                                        BalanceChangeNew.FREE_TRIAL,
                                                                        1,
                                                                        parent.id,
                                                                        0,
                                                                        parent.xg_user_id if parent.xg_user_id else 'null',
                                                                        parent.adviser_user_id if parent.adviser_user_id else 'null',
                                                                        create_time.strftime('%Y-%m-%d %H:%M:%S'),
                                                                        create_time.strftime('%Y-%m-%d %H:%M:%S'))
            print(sql)

        for smallclass_parent in smallclass_parents:

            create_time = smallclass_parent.create_time + timedelta(days=3)

            sql = '''\ninsert into finance_balance_change(role, user_id, reason, amount, parent_user_id, reference, xg_user_id, adviser_user_id, create_time, update_time) 
                    values({},{},{},{},{},{},{},{},'{}','{}');\n'''.format(BalanceChangeNew.PARENT,
                                                                        smallclass_parent.id,
                                                                        BalanceChangeNew.COMPENSATION,
                                                                        0.5,
                                                                        smallclass_parent.id,
                                                                        0,
                                                                        smallclass_parent.xg_user_id if smallclass_parent.xg_user_id else 'null',
                                                                        smallclass_parent.adviser_user_id if smallclass_parent.adviser_user_id else 'null',
                                                                        create_time.strftime('%Y-%m-%d %H:%M:%S'),
                                                                        create_time.strftime('%Y-%m-%d %H:%M:%S'))
            print(sql)